defmodule MyApp.Repo.Migrations.AddResources do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:representatives, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
      add :first_name, :text
      add :last_name, :text
      add :organization_id, :uuid
    end

    create table(:organizations, primary_key: false) do
      add :id, :uuid, null: false, default: fragment("gen_random_uuid()"), primary_key: true
    end

    alter table(:representatives) do
      modify :organization_id,
             references(:organizations,
               column: :id,
               name: "representatives_organization_id_fkey",
               type: :uuid,
               prefix: "public"
             )
    end

    create unique_index(:representatives, [:first_name, :last_name],
             name: "representatives_representative_name_index"
           )

    alter table(:organizations) do
      add :name, :text
    end
  end

  def down do
    alter table(:organizations) do
      remove :name
    end

    drop_if_exists unique_index(:representatives, [:first_name, :last_name],
                     name: "representatives_representative_name_index"
                   )

    drop constraint(:representatives, "representatives_organization_id_fkey")

    alter table(:representatives) do
      modify :organization_id, :uuid
    end

    drop table(:organizations)

    drop table(:representatives)
  end
end
